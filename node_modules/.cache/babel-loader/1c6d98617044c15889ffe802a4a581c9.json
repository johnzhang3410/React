{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johnz\\\\Desktop\\\\WebDev\\\\learn-react\\\\react_task_tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'Doctors Appointment',\n    day: 'Feb 5th at 2:30pm',\n    reminder: true\n  }, {\n    id: 2,\n    text: 'Meeting at School',\n    day: 'Feb 6th at 1:30pm',\n    reminder: true\n  }, {\n    id: 3,\n    text: 'Food Shopping',\n    day: 'Feb 5th at 2:30pm',\n    reminder: false\n  }]); //useState takes in the initial states, tasks is the current state, and setTasks is the function that updates tasks\n  //Delete Task\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //Setting tasks to filtered tasks\n  //we filter the tasks array such that if the task id \n  //Toggle Reminder\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 27\n    }, this) : 'No tasks to show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n/*class App extends React.Component {\n  render() {\n    return <h1>Hello from a class</h1>\n  }\n}*/\n//Class Component\n\n\n_s(App, \"9cFWZ1E0w65+pZ3fh1ciW0b41RM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/johnz/Desktop/WebDev/learn-react/react_task_tracker/src/App.js"],"names":["React","Header","Tasks","useState","App","tasks","setTasks","id","text","day","reminder","deleteTask","filter","task","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CACjC;AACII,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,qBAFV;AAGIC,IAAAA,GAAG,EAAE,mBAHT;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GADiC,EAOjC;AACIH,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,mBAFV;AAGIC,IAAAA,GAAG,EAAE,mBAHT;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GAPiC,EAajC;AACIH,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,eAFV;AAGIC,IAAAA,GAAG,EAAE,mBAHT;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GAbiC,CAAD,CAAlC,CADa,CAqBb;AAEF;;AACA,QAAMC,UAAU,GAAIJ,EAAD,IAAQ;AACzBD,IAAAA,QAAQ,CAACD,KAAK,CAACO,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD,CAxBe,CA2Bf;AACA;AAEA;;;AAGE,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAIGF,KAAK,CAACS,MAAN,GAAe,CAAf,gBAAmB,QAAC,KAAD;AAAO,MAAA,KAAK,EAAET,KAAd;AAAqB,MAAA,QAAQ,EAAEM;AAA/B;AAAA;AAAA;AAAA;AAAA,YAAnB,GAAmE,kBAJtE;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;AAED;AACA;AACA;AACA;AACA;AACA;;;GAnDSP,G;;KAAAA,G;AAqDT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport { useState } from 'react'\n\nfunction App() {\n  const [tasks, setTasks] = useState([\n    {\n        id: 1,\n        text: 'Doctors Appointment',\n        day: 'Feb 5th at 2:30pm',\n        reminder: true,\n    },\n    {\n        id: 2,\n        text: 'Meeting at School',\n        day: 'Feb 6th at 1:30pm',\n        reminder: true,\n    },\n    {\n        id: 3,\n        text: 'Food Shopping',\n        day: 'Feb 5th at 2:30pm',\n        reminder: false,\n    },\n    ])\n  //useState takes in the initial states, tasks is the current state, and setTasks is the function that updates tasks\n\n//Delete Task\nconst deleteTask = (id) => {\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n//Setting tasks to filtered tasks\n//we filter the tasks array such that if the task id \n\n//Toggle Reminder\n\n\n  return (\n    <div className=\"container\">\n      <Header />\n      {/*props can be defined within its component (Ex. title={1} or title='String' ), defaultProps will appear if not specified */}\n      {/*The component Header contains the header which is made up of a title as well as a button component */}\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask}/>  : 'No tasks to show'}\n      {/*current state tasks array gets passed down as parameter into Tasks.js and the array get looped displaying all the texts */}\n      {/*The function deleteTask gets passed down as parameter onDelete to Tasks.js which gets further passed down to Task.js */}\n      {/*if the number of tasks is bigger than 0, show Tasks. Else show 'No tasks to show' */}\n    </div>\n  );\n}\n\n/*class App extends React.Component {\n  render() {\n    return <h1>Hello from a class</h1>\n  }\n}*/\n//Class Component\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}